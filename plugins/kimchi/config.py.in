#
# Project Kimchi
#
# Copyright IBM, Corp. 2013-2015
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
#

import libvirt
import os
import platform
import threading

from wok.config import PluginConfig, PluginPaths
from wok.xmlutils.utils import xpath_get_text

kimchiLock = threading.Lock()

__with_spice__ = "@withspice@"

# Storage pool constant for read-only pool types
READONLY_POOL_TYPE = ['iscsi', 'scsi', 'mpath']


def get_distros_store():
    return os.path.join(PluginPaths('kimchi').conf_dir, 'distros.d')


def get_debugreports_path():
    return os.path.join(PluginPaths('kimchi').state_dir, 'debugreports')


def get_screenshot_path():
    return os.path.join(PluginPaths('kimchi').state_dir, 'screenshots')


def find_qemu_binary(find_emulator=False):
    try:
        connect = libvirt.open(None)
    except Exception, e:
        raise Exception("Unable to get qemu binary location: %s" % e)
    try:
        xml = connect.getCapabilities()

        # On Little Endian system, the qemu binary is
        # qemu-system-ppc64, not qemu-system-ppc64le as expected
        arch = platform.machine()
        if arch == "ppc64le":
            arch = "ppc64"

        if find_emulator:
            expr = "/capabilities/guest/arch[@name='%s']\
                    /emulator" % arch
        else:
            expr = "/capabilities/guest/arch[@name='%s']\
                    /domain[@type='kvm']/emulator" % arch
        res = xpath_get_text(xml, expr)
        location = res[0]
    except Exception, e:
        raise Exception("Unable to get qemu binary location: %s" % e)
    finally:
        connect.close()
    return location


class KimchiPaths(PluginPaths):

    def __init__(self):
        super(KimchiPaths, self).__init__('kimchi')
        self.spice_file = os.path.join(self.ui_dir,
                                       'spice-html5/pages/spice_auto.html')

        if __with_spice__ == 'yes':
            self.spice_dir = self.add_prefix('ui/spice-html5')
        elif os.path.exists('@datadir@/spice-html5'):
            self.spice_dir = '@datadir@/spice-html5'
        else:
            self.spice_dir = '/usr/share/spice-html5'

        if os.path.exists('@datadir@/novnc'):
            self.novnc_dir = '@datadir@/novnc'
        else:
            self.novnc_dir = '/usr/share/novnc'

        if self.installed:
            self.spice_css_file = os.path.join(self.spice_dir, 'spice.css')
        else:
            self.spice_css_file = os.path.join(self.spice_dir, 'css/spice.css')


kimchiPaths = KimchiPaths()


class KimchiConfig(PluginConfig):
    def __init__(self):
        super(KimchiConfig, self).__init__('kimchi')

        custom_config = {
            '/novnc': {
                'tools.staticdir.on': True,
                'tools.staticdir.dir': kimchiPaths.novnc_dir,
                'tools.nocache.on': True,
                'tools.wokauth.on': True,
            },

            '/spice_auto.html': {
                'tools.staticfile.on': True,
                'tools.staticfile.filename': kimchiPaths.spice_file,
                'tools.nocache.on': True,
                'tools.wokauth.on': True,
            },

            '/spice-html5': {
                'tools.staticdir.on': True,
                'tools.staticdir.dir': kimchiPaths.spice_dir,
                'tools.nocache.on': True,
            },

            '/spice-html5/spice.css': {
                'tools.staticfile.on': True,
                'tools.staticfile.filename': kimchiPaths.spice_css_file,
                'tools.nocache.on': True,
            },
        }

        self.update(custom_config)
